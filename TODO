Note:

TODO_OLD relates to the Application generator I was writing.
There's a lot that works there. Given a table name you can do CRUD functions against it.

However, that uses the ncurses fields and forms. After creating fields in ruby, i've ditched that, and will perhaps redo that with rbcurses.

This todo relates to rbcurse, our own ruby fields, forms, widgets and application related goodies.

MUST DO:
========

- TextArea and Field are allowing editing via RETURN, C-k etc if not editable. Pls check.

- widget - hotkey on label puts focus on that field, on using hotkey - DONE
  But start using mnemonic for button etc,i/o underline.

1. popup lists/combo lists: correct inconsistency in firing of event. RETURN vs SELECT

2. cleanup scrollable code esp repaint method.

3. Field and TextArea: OVERWRITE mode, 
   FIELD justification mode (after tabout), 
   FIELD - auto_skip (after reaching end), 
   NULL_ALLOWED -upon leaving don't validate if true - DONE

4. Label - JUSTIFY (e.g. if numeric field)

Widget - event LEAVE and CHANGED should be separate. Currently validations happen on LEAVE.

Thoughts:
=========

- filechooser
- quick dialogs for alert, confirm, etc

- simple date widget YYYY-MM-DD using 3 fields

- Action classes (like Java swing) which can be passed to a menu, button, or key. Also, disabling will disable for all.


- toolbar ?

- application class as per QT http://doc.trolltech.com/4.4-snapshot/mainclasses.html

- status bar, main window ?

- allow user to access history and enter from it, for field
