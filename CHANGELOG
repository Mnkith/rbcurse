**2008-12-28 21:05**
## Textarea wrapping bugs fixed ##

I believe things are working now.
ALso added footers to the text area and view. That could help me in debugging too.

frmincr200812282104.tgz
* * *
**2008-12-28 01:25**
## WIP in Table ##

working

frmincr200812280125.tgz
* * *
**2008-12-27 01:07**
## bug fixes in textarea cursor movement ##

with respect to wrapping lines
backspace behaviour.
newlines
still some glitches.

* * *
**2008-12-26 20:07**
## Missed one case of wrapping in Textarea ##

Whene there IS data in next row. Fixed.

* * *
**2008-12-25 18:30**
## ACS_ boxes in TextArea and TextView ##

ACS_ used for boxes

* * *
**2008-12-25 18:22**
## better boxes using ACS_ for messagebox and Listbox ##

Using ACS_ code to get boxes.

* * *
**2008-12-24 20:20**
## InputDataEvent: firing events on changes in TextArea ##

Now reporting changes in text happening in TextArea via InputDataEvent

* * *
**2008-12-24 15:51**
## Alt-keys in TextArea and View were getting eaten up ##

Returning alt keys so buttons and mnemonics can process

* * *
**2008-12-24 15:40**
## vertical alignment of combolists ##

ABove, below, center, and same row as field.

* * *
**2008-12-24 13:00**
## added autoscroll to TextArea ##

Goes to end with each "<<" command.
Also fixed goto_end and goto_start. I had changed the names in TextArea but not in scrollable.

* * *
**2008-12-23 23:49**
## Migrated buttons to mnemonic and ampersand for hotkeys ##

Unerline will result in underline, overriding that created by ampersand, but not register key.
mnemonic will register alt-key and underline first occurence
Using ampersand will register and underline given occurrence.

frmincr200812232347.tgz
* * *
**2008-12-23 13:38**
## Added observers to events ##

An object can listen in to events of another. Could be a hack.
Helps if user creates an object which further creates others. User binds actioon to top level object.
But we want internal objects events to also fire action.

frmincr200812231337.tgz
* * *
## Multiple bindings for each event ##

Each object can bind its actions without fear of overwriting each other.
Variables update_command also stacked.

**2008-12-22 15:13**

## class Field: CHANGED event, triggered when tabbing out after changing ##

.

frmincr200812221513.tgz
* * *
**2008-12-22 12:52**
## Added null_allowed to class Field ##

if null_allowed, validation will be skipped if empty, however
LEAVE event will be triggered.

frmincr200812221251.tgz
* * *
**2008-12-22 02:02**
## xterm-color key hacks and vt100/200 fixes ##

F1..F4 hack for xterm color
in getchar().
Menu selection (highlighting) in rform.rb

frmincr200812220201.tgz
* * *
**2008-12-20 22:05**
## Removed CommonIO includes ##

replaced with @window.printstring

frmincr200812202204.tgz
* * *
**2008-12-20 13:23**
## toggle_key for menu bar ##

menu bar now can define and bind its toggle key.

frmincr200812201322.tgz
* * *
**2008-12-19 21:28**
## scrolling in edit box ##

Implemented horiz scrolling in single line edit box
Forgot to add:
Editable and non-editabl combo-boxes were also added the other day.

frmincr200812192127.tgz
* * *
**2008-12-15 14:16**
## tabbedpanes - with radio buttons ##

Much improved. Uses an extended radio button, so states of selected, focussed and unfocussed
are easy to display.

frmincr200812151415.tgz
* * *
**2008-12-14 16:50**
## tabbedpane-part2 ##

with panels and forms. but how to navigate between buttons and form.

frmincr200812141650.tgz
* * *
**2008-12-14 14:24**
## preliminary tabbed pane ##

need to create form earlier so user can get the form and set it.

frmincr200812141424.tgz
* * *
**2008-12-11 22:32**
## Popuplist in action ##

sample of popuplist called whenever cursor falls in User field.
Pressing Enter passes the value.

frmincr200812112231.tgz
* * *
**2008-12-11 01:27**
## class PopupList ##

wip but almost done.
pops up a list which can be selected from.

frmincr200812110126.tgz
* * *
**2008-12-03 20:13**
## Field accepts values() and valid_regex() ##

Restrict entry to values

Validate field against valid_regex.

frmincr200812032012.tgz
* * *
**2008-12-01 18:34**
## Messagebox takes list ##

Allow user to make a messagebox passing a list.

frmincr200812011834.tgz
* * *
**2008-11-30 00:58**
## friendly colors - under testing ##

Have implemented human friendly colors for foreground and background
Tested out on some widgets but not all. Need to totally test and clean code.
Is functioning. See radio buttons and their label, see checkbox which makes the label bold.

frmincr200811300056.tgz
* * *
**2008-11-29 21:10**
## experimental Colormap to make color definitions easy ##

Added a Colormap module that helps create and retrieve colors by human names
so we can define colors in widgets without reference to color_pairs.

frmincr200811292109.tgz
* * *
**2008-11-28 00:30**
## CheckBoxMenuItem ##

Implemented a checkbox menu item, works but i am not pleased, quite dirty.

Widgets are tied to a form, for ease of construction.
In the case of menus they are not, and menus print in a different manner.

Submenu should also have been a class, perhaps. 

frmincr200811280026.tgz
* * *
**2008-11-27 20:11**
## ToggleButton ##

Now a togglebutton class that is extended by Radio and checkbox
Togglebutton is itself a toggleable button.

frmincr200811272010.tgz
* * *
**2008-11-27 18:54**
## extended radiobutton from checkbox ##

to reduce code.
Now i am thinkig both shuold extend one class. My ole Swing book gaves me a cool
name to call it. ToggleButton!

frmincr200811271853.tgz
* * *
**2008-11-27 12:13**
## menubar hotkey ##

Done handling of hotkey/mnemonic in menu
and closing of menubar when action complete

frmincr200811271212.tgz
* * *
**2008-11-27 00:24**
## Titles in all scrollable views. ##

Added titles and title attribs.

frmincr200811270023.tgz
* * *
**2008-11-26 23:32**
## horiz scrolling in TextView ##

Textview now can scroll horiz.
Ctrl-E and Ctrl-A behavior in cases of data exceeding width taken care of.

frmincr200811262331.tgz
* * *
**2008-11-26 22:26**
## TextView and other fixes ##

Introduced a TextView widget which just shows multiline text, scrollable.
Allows us to programmatically scroll the same.

Tested and fixed LEAVE and ENTER of widgets (had forgotten that!).

frmincr200811262224.tgz
* * *
**2008-11-26 11:49**
## field.show ##

1. implemented Field.show (password field in example will show *)

2. created a method getvalue_for_paint, so that getvalue returns actual value for field
or widget and no display stuff.

3. Button. surround_chars. change the sq brackets to soething else.

frmincr200811261147.tgz
* * *
**2008-11-25 23:58**
## selectable in ListBox ##

added a new module selectable copying from sqlpopup
however, this is a window and not a pad so its much more diffucult.

Due to field_enter and exit, the selected row shows affter 2 movements!

Clear selection not yet functioning here. But select/deselect/next sel and prev sel are working.

frmincr200811252356.tgz
* * *
**2008-11-22 23:20**
## RadioButton ##

Added another widget. took less than 2 mins: a radio button. Praps I should just extend CheckButton
rather than copy. Just a couple of lines changed.
Some bugs may have cropped up in Textarea after introduction of hard and soft returns.
Entry was happening one col before where cursor was appearing.

frmincr200811222319.tgz
* * *
**2008-11-22 21:50**
## CheckBox ##

Took me less than 5 mins to implement a CheckBox inheriting from button.

frmincr200811222149.tgz
* * *
**2008-11-22 19:43**
## textarea ##

moving up characters when deleting
soft and hard return so wrapping can be respected when deleting.

frmincr200811221943.tgz
* * *
**2008-11-22 16:47**
## textarea ##

incoming data wrap it.
But i do need to look at newlines and preserve. current logic loses them.

frmincr200811221647.tgz
* * *
**2008-11-22 01:41**
## textarea word wrap when pushing from behind ##

still needs ironing out. could be some issues in rare cases.

frmincr200811220140.tgz
* * *
**2008-11-22 00:45**
## textarea with wrapping #1 ##

wrapping as cursor exceeds border. however, not yet when we insert chars anddelete.

frmincr200811220044.tgz
* * *
**2008-11-21 23:42**
## textarea ##

more issues in movement sorted out when end of length.
Box showing correctly now.

frmincr200811212342.tgz
* * *
**2008-11-21 22:16**
## textarea with newlines ##

added in newlines, and we don't print them.
also when joining we remove.
be careful i dont put two.

frmincr200811212215.tgz
* * *
**2008-11-21 21:54**
## Textarea more work on joining and spliting rows ##

wip

frmincr200811212153.tgz
* * *
**2008-11-21 17:39**
## Textarea starting ##

Have a basic textarea working
Still very rough.

frmincr200811211738.tgz
* * *
**2008-11-21 01:38**
## Listbox ##

created a scrollable listbox as a widget and put in my form.
Also a scrollable module to include to get the functionality

frmincr200811210137.tgz
* * *
**2008-11-20 15:58**
## Variable ##

Added custom to MessageBox

Added class Variable and tested out with button and label.

frmincr200811201558.tgz
* * *
**2008-11-20 01:38**
## MessageBox ##

Have made a messagebox just like links
   - uses Button class.
   - Not using labels etc yet. Not required. Keeping it simple.
   

frmincr200811200137.tgz
* * *
**2008-11-19 19:59**
## Widget class as super ##

Created the widget class with DSL properties
Now all widgets extend it,
so common functionality as well as DSLish.

frmincr200811191958.tgz
* * *
**2008-11-19 01:07**
## FIELD navigation ##

a small hack and we can circle and it does not cause an overflow now.
But the focusables array was much neater and less risky.

frmincr200811190106.tgz
* * *
**2008-11-19 00:53**
## FIELD ##

I have reworked the logic of traversal to use a loop, no extra array and no 
recursion. 
Only issue is i cant circle around snce it goes into a stack overflow.
The extra array was simpler though.

frmincr200811190052.tgz
* * *
**2008-11-18 20:41**
## menubar working !!! ##

menubar working with submenus. destroys and passes contrl back to parent on LEFT
and goes to nezt on RIGHT.

frmincr200811182040.tgz
* * *
**2008-11-18 19:43**
## menubar wip printing menu on leave and enter ##

1. now submenu showing , onleave onenter okay.

2. only thingie left is the navigation

frmincr200811181942.tgz
* * *
**2008-11-18 19:05**
## menubar wip ##

Now submenu is created at tright time and destroyed onleave.

     1. to take care of priting of menu as a menuitem
     2. to pass control ofkeys into the new menu

frmincr200811181904.tgz
* * *
**2008-11-18 18:18**
## menubar wip ##

paint does not create.
wip
but still to look into submenu

frmincr200811181818.tgz
* * *
**2008-11-18 16:18**
## menubar wip ##

submenu paints itself since it s on enter
need to make some  changes ...
fire -paint submenu

frmincr200811181617.tgz
* * *
**2008-11-18 03:04**
## submenu ##

it is displaying now, but firing immeidately.
also we will need to walk down it and select.

frmincr200811180303.tgz
* * *
**2008-11-18 00:40**
## menu bar actions etc fine ##

Barring ability to hav submenu's actions are working.

frmincr200811180040.tgz
* * *
**2008-11-17 18:51**
## menubar wip ##

its up but no actions yet.

frmincr200811171851.tgz
* * *
**2008-11-17 03:14**
## menu menubar menuitem interim work ##

interim work in progress 
things are showing need alignment and polishing
actions to do

frmincr200811170313.tgz
* * *
**2008-11-16 22:09**
## changed key handling down to objects ##

so they can take and ignore what they want
earlier form was trying to be too intelligent.

frmincr200811162208.tgz
* * *
**2008-11-16 19:18**
## Field form and label ##

Tried to do more of method_missing and define_method to make it dsl-ish but failed.
Added datatype, chars_allowed and some bug-fixing.
Need to put exit_proc.
Now to try out a menubar.

frmincr200811161916.tgz
* * *
**2008-11-16 03:16**
## Button which inherits label ##

circular order of navigation
editing taking care of different types of fields

WAIT. What is label doing inside FORM Why ? it can remain on Window, no ?
We are complicating code by inclusing in form and widgets.

frmincr200811160315.tgz
* * *
**2008-11-16 01:17**
## form implemented buttons too ##

but i dont like the focusable part. need to redo

frmincr200811160117.tgz
* * *
**2008-11-15 13:06**
## changed in forms and fields as per TK ##

changing things a bit.

frmincr200811151306.tgz
* * *
**2008-11-15 02:33**
## rform ruby forms fields ##

I am writing a simpler form and field thingie.
I know thats awfully ambitious, but the sequence of ncurses sucks.

We need to be more dynamic.
I have made a displayable form. But need to trap some keys are kick some asss.

frmincr200811150232.tgz
* * *
**2008-11-14 18:48**
## reintroduction of datasource ##

testing sqlpopup wiht processes and data

frmincr200811141847.tgz
* * *
**2008-11-14 00:01**
## Fixes for smaller screens ##

A lot of hardcoding for large screens

     - changes in key labels
     - changes in data and col names
     - padrefresh
     - bug in pressing space
     - printing messages in centre, no more beeps please.
Now small screens can be requested.

frmincr200811140000.tgz
* * *
**2008-11-13 21:52**
## Cleanup , Refact and polishing output ##

1. cleaned up junk code

2. moved classes out. made key label printer into a class

3. common print modules

4. common db module

5. sizing of columns and formatting of titles

6. align of num fields

frmincr200811132151.tgz
* * *
**2008-11-13 10:46**
## highlighting ##

Using wchgat for highlighting pad instead of rewriting data
Also, therefore changed select functionality.

frmincr200811131045.tgz
* * *
**2008-11-13 01:15**
## key_labels ##

Worked on much better coded key_labels which don't require the poor hacky format the old one did
 Saner.
Also putting a message in -3 row and letting it go off. Its on the window. Goes off in next keystroke auto.

frmincr200811130112.tgz
* * *
**2008-11-12 19:31**
## flickering and key movement ##

       - reduced flickering by doing werase only when absolutely nec. but this could lead
         to some situations where clearing is not done. to keep checking.

       - some errors in key movement due to wrong @window value or space etc
         having incorrect checks. Need to keep checking.

frmincr200811121929.tgz
* * *
**2008-11-12 12:41**
## Regexp and symbols in mappings ##

In order that printables can be used had to add REGEXP in mapping.

Also added symbols

So now we can't search Hash normally, have to iterate. So ordered hash hadto beused.
Tried to move to arrays, but pendingkeys would have not been possible.
Symbols are not tested yet.

frmincr200811121239.tgz
* * *
**2008-11-12 00:39**
## sqlpopup and keymapper ##


We have a much simpler than VER keymapper. Code is small. 
      - Uses keyboard.rb from VER project to give us ESC and meta/alt keys.
      - We use same syntax for configuring such as class.let :mode do etc.
      - Provided:
               - single keys combinations
               - a mode with its set of keys
               - dual keys such as C-x C-c or C-x p etc which do not change mode.

frmincr200811120036.tgz
* * *
**2008-11-11 23:40**
## sqlpopup our own modes and key ##

allows cx mode with its keys
but its looks okay for a mode
for a multiple key we would prefer to say : C-c C-x
and not create a separate context./mode.

frmincr200811112339.tgz
* * *
**2008-11-11 23:12**
## sqlpopup my version ##

trying to build a simpler version of sqlpopup
that i can understand. VER is pretty complex and the scope is not relevant to our 
kind of app.

frmincr200811112311.tgz
* * *
**2008-11-10 12:25**
## sqlpopup ##

after some minor bugfixes in space bar, and better messages
now i will try to integrate keymap and keyboard.

frmincr200811101224.tgz
* * *
**2008-11-09 23:50**
## sqlpopup out own keymapper ##


Implemented a small quick dirty key method mapper. This will make transition to keyboard.rb
easier.

frmincr200811092349.tgz
* * *
**2008-11-09 19:37**
## sqlpopup ##

removed blank line and now selector on actual row 1.

put columns on windw however, this means col names always shpwing but wont scroll!!

frmincr200811091935.tgz
* * *
**2008-11-09 15:43**
## clearing selection ##

sqlpopup
also numbering of lines based on content.length

frmincr200811091542.tgz
* * *
**2008-11-09 13:05**
## sqlpopup ##

    - row selection and navigation.
    - search was no longer scrolling, fixed that so prow is always displayed.

frmincr200811091304.tgz
* * *
**2008-11-09 01:24**
## sqlview.rb ##

TABULAR sql view with much better scrolling like our old tabular thingie
scrolling like alpine
allows selection, we need to allow UNselect all, goto-selected etc.

frmincr200811090123.tgz
* * *
**2008-11-08 22:03**
## tabular view in pad ##

Used the pad program to give TABULAR View too.
SIMPLE view has column name and data per row.
ALTERNATING has name followed by data in next row.
TABULAR gives the entire result in one tabular form
TABULAR implements a search using "/" and ^N and ^P to go back/forth in search.

I need to make a selectable list which will return selectedrow, simple for use 
as help in dataentry forms.

frmincr200811082201.tgz
* * *
**2008-11-08 13:17**
## sqlresultsetpadviewer ##

Using pads, made a scrollable viewer for sql result sets.
Has a goto record also.

To make tabular, with option of selecting.

frmincr200811081316.tgz
* * *
**2008-11-08 01:09**
## sqlview.rb ##

a program to view an sql resultset on screen.
allows going through mult rows, and paging if more columns than will come on a screen.

Not tested with really long data. Will data get cut off or cause errors or what.

frmincr200811080108.tgz
* * *
**2008-11-07 20:24**
## mandatory fields ##

     - checking at time of get_current_values_as_hash
     - display with asterisk if passed before form creation

frmincr200811072023.tgz
* * *
**2008-11-07 13:10**
## messages on execute and checks ##

insert/del/update messages

check on update/del whether select was done or not.

frmincr200811071309.tgz
* * *
**2008-11-07 01:42**
## on_exit and post_proc ##

These 2 are duplicating each other,
Got both to work though. samples in contractedit1101.rb

frmincr200811070141.tgz
* * *
**2008-11-06 22:48**
## rowid and crud options ##

Have checked out contractedit1101 with view, edit, delete etc options.
Made sure that only relvnt keys are visible and active

## ROWID ##
Now rowid can be switched on so edit and delete use that. Same for find all.

frmincr200811062246.tgz
* * *
**2008-11-05 23:49**
## create_view_one_application ##

the first of the easy to call applications for a table, tell him you only want to view one
contract. The user can only quit from there. No operations possible.

Similarly now to do the view_any, delete_one, edit_one etc combinations.

frmincr200811052348.tgz
* * *
**2008-11-03 00:18**
## conditional submenu and sql options ##

Using @sql_actions, one can specify which options should be shown to user
   - retrict only to select, or upd/del etc, or give him no options
   - have to take care of bind keys also in this situation.
   - can start the program with a keyfield supplied
     or with the values to display supplied.
See contractedit1101.rb.

frmincr200811030016.tgz
* * *
**2008-11-02 11:55**
## basiceditform.rb ##

functionality moved down from rbeditform to basicedit which should be instantiated
hightlighting and helpproc display moved
Now rbedit may either be extended and its handlers overridden,
or else you can set handlers (if composing).

frmincr200811021154.tgz
* * *
**2008-11-01 23:47**
## contractedit1101.rb ##

This conttains the contract edit with:
    - calls to create_default_application which takes care of windows etc
      So calling code is very few lines. Fully functional table realted CRUD screen.
    - ADded WHERE and ORDER BY in actions.
    - The search interface is still not clear. Using ^X-M for clearing screen and inserting.
      Can be confusing.

frmincr200811012345.tgz
* * *
**2008-10-31 14:48**
## Actions: CRUD and FIND-all ##

crud actions working
findall, first, last, next, previous.

frmincr200810311448.tgz
* * *
**2008-10-29 23:53**
## SingleTable ##

Have moved generic methods into a module which can be called or bound to keys.
generic update,delete,select, insert and create_fields.
Or maybe we can extend a class from rbedit. lets see.

frmincr200810292352.tgz
* * *
**2008-10-29 00:32**
## contractedit new_create_fields ##

this method uses the newly pimped FIELD object, hoping to make it MUCHO easier to create fields.
Still a lot more that can go in, validate against values. 

frmincr200810290030.tgz
* * *
**2008-10-28 11:26**
## more fields ##

more touching.

frmincr200810281126.tgz
* * *
**2008-10-28 11:16**
## work on create_field ##

an easier create_field method
and many convenence methods for field settings and creation.
not tested.
changes are in rbform.rb

frmincr200810281115.tgz
* * *
**2008-10-28 00:13**
## contractedit.rb ##

a lot of generic stuff
does insert/update
    - generic field creation

frmincr200810280013.tgz
* * *
**2008-10-26 13:27**
## new folder structure ##

Finally used hoe
    - created new structure
    - called it rbcurse
    - updated requires
    - moved dsls to dsl and outputs to out. (older ones)
    - now i will create DSLS and OUTs in a totally different area so i don't
      clutter up the project.

frmincr200810261325.tgz
* * *
**2008-10-26 00:57**
## contractedit.rb ##

passing a values hash and displaying values
to pass an ID and have it select
to save data on screen

frmincr200810260057.tgz
* * *
**2008-10-25 23:08**
## query and table app rewrite ##

with yield
and some awful changes in main variable so that printing of header and footer can happen
header and footer win is driving me NUTS !!!!!

frmincr200810252307.tgz
* * *
**2008-10-25 10:37**
## update DSL to give edit app for emailer.rb ##

_skelform2.rb generates emailer.rb with the block.

frmincr200810251036.tgz
* * *
**2008-10-25 00:20**
## more touches ##

     - moved commons into EditApplication, removed from main
     - entire header, footer creation in Edit Application.
     - Is this causing more confusion, or reducing,
     - main and app point to EA.
     - perhaps emailer should not extend Application ?

frmincr200810250019.tgz
* * *
**2008-10-24 22:03**
## before yielding self ##

making a zip before yielding self in EditApplication.

frmincr200810242202.tgz
* * *
**2008-10-24 17:58**
## lambda and method from DSL ##

Did some crappy stuff so that you can use method or lambda from DSL.

frmincr200810241757.tgz
* * *
**2008-10-24 14:34**
## form and field handlers ##

Done some changes to handlers, 
    
    - moved handle_unhandled_keys up to rbform
    - used method(:) while passing procs
    - trying to enforce usage of Proc or Method in handlers and not going to main
      or datasource to check for an existing name
      i.e. reduce coupling.
    - tested with emailer.rb

Am hoping to make sqlite etc based rbeditforms simpler to implement
by cutting out dataasource nad passing handlers in to the form.

frmincr200810241431.tgz
* * *
**2008-10-19 00:13**
## proc ##

bind and keys_handled has a proc too now

passing form to handlers not curritem and listselected from rbeditform.
to be done in tableapplication too. 

frmincr200810190012.tgz
* * *
**2008-10-18 22:37**
## set_proc ##

one can set a proc for populating form and saving.
Some other cleaning up too.

frmincr200810182236.tgz
* * *
**2008-10-17 12:51**
## FIELD related factoring ##

A lot of stuff has gone into Field, valid, default, postproc
This happens on get_value, set_value and field_term.

frmincr200810171250.tgz
* * *
**2008-10-16 14:58**
## touching up ##

a few more touches so that DSL generates exactly like pines mailer.
Some form refreshing so that focus is on first field.
Also, clearing error at top of loop.

frmincr200810161457.tgz
* * *
**2008-10-15 15:07**
## cleanup ##

removed @window, its already there are form_win() !

frmincr200810151506.tgz
* * *
**2008-10-15 12:57**
## set_value and get_value in FIELD ##

Taking care of ML fields and chomp inside FIELD
Next change is to knock off @current.

frmincr200810151256.tgz
* * *
**2008-10-15 12:28**
## Changes to FIELD ##

set_value and get_value doing ML processing.
But not calling it yet.

frmincr200810151227.tgz
* * *
**2008-10-15 11:34**
## email multiline format ##

This was having to be called by the user in form_post_proc
Now before save, heightwill be checked.

Howevr, this should happen auto. Added get_value and set_value in FIELD. and maybe thats 
where it shouldhappen.
But we have to use it, too. We are using @current.

frmincr200810151133.tgz
* * *
**2008-10-15 01:40**
## Edit DSL ##

Finally got the email program running from a DSL.
One job pending still ... update_current_values.
Some things could be generated at generate time, setup observers, rather
than at load time.

Still then need to start getting a  proper datasource into place.

frmincr200810150138.tgz
* * *
**2008-10-14 14:29**
## C-c ##

1.  Now getting c-y, c-z, c-s and c-q
2.  We seem to have lost C-c
    The trap is eating it up totally.
    Finally i am trapping and doing an ungetch for which had to open the Ncurses class
    and fix.
3. Also allowing user to bind_key and use the REQ_ values
4. Fixed bugs so that keys_handled is called in rbeditform.

frmincr200810141427.tgz
* * *
**2008-10-13 20:44**
## Edit Emailer ##

More cleaning u and corrections in C-x method.

frmincr200810132044.tgz
* * *
**2008-10-13 18:50**
## highlighting field ##

Some cute coding, and we've got the current field label hightlighted.
Sadly Message Text shows that : after it ;-(. That's the default.

Now to get the silly keylabels functional.

frmincr200810131848.tgz
* * *
**2008-10-13 17:32**
## Edit screen ##

More refactoring on editapplication and rbeditforms.
Moved a lot iinto form. App should have less. Form should not keep calling into app.

Also this version has fields centered abd reverse video. I am now going the alpine way.

frmincr200810131731.tgz
* * *
**2008-10-13 12:57**
## gen4.rb EDIT FORM ##

I have the old gen2.rb redone into a datasource, rbeditform, editapplication.
Just about coming up!
Still many errors de to references from form to app.

Totally unclear here as to what the app is doing, and should it have all thefunctinolity
in it or not. Too much calling from form to app.

Its quite a mess and needs a major overhaul.

I also need to make changes so that rt_hashes and rt_fields dont have to be passed.

Application should only have what is required by the main app for setting up and cleaning ==
not all the stuff for regular work. 

Form should contain all else.

frmincr200810131253.tgz
* * *
**2008-10-12 13:32**
## MENU ##

Updated menu.skel so it generates a class that inherits from menuApplication.
It generates a menu class.
It is working !

frmincr200810121331.tgz
* * *
**2008-10-12 00:29**
## running from menu ##

1.  Got the menu program working after all the changes in base classes.

2. Got programs running from menu. Apparently, some panels were not being 
   destroyed, so there was a BUS ERROR in update_panels.

3. There was a warning of BOTTOM_WIN_WIDTH already defined that was messing the screen
   and i could not see it clearly, so it bugged me a long time.

All's okay but the skel programs have to be updated. The menu DSL minp1 has to be rerun to see
if it gives correct output as per menu1.rb.
Basically, panels have to be returned with windows so they can be destroyed.

frmincr200810120025.tgz
* * *
**2008-10-10 20:48**
## padreader and panelreader ##

touched up both and maximized them.
worked on keys of padreader.
Called both from commons1. Seems okay.

frmincr200810102048.tgz
* * *
**2008-10-10 18:19**
## padreader.rb ##

Made a class out of it
Can view files using padreader using view_file(filename).
Have not put buttons, and headers like in panelreader yet.

frmincr200810101818.tgz
* * *

**2008-10-10 14:36**
## form specific key labels - wip ##

It is working but not standard
Need to simplify it.
qapp returns keylabels but does not support a keys_handled
tapp has keyhasharray but does not generate its labels.
we should junk app labels. that complicates things.

frmincr200810101433.tgz
* * *
**2008-10-10 11:58**
## tab and enter behaviour in query apps ##

Tab moves between fields in query form
Tab in table moves back to query form.
Enter in table runs query as b4, but now also moves focus to table

frmincr200810101157.tgz

**2008-10-09 22:23**

## HELP ##
Using __FILE__ in  constructor of major programs to determine a name for file
to check for help when user presses ?
Application.rb checks for this.

* * *
**2008-10-09 19:14** 

## panelreader ##
deleting panel in ensure otherwise previous screen wuld be scr00d.

## help ##
Added a generic application_key_handler in Application.rb which shows
page specific help. Currently, i have to work that out. Application should
define a page. It by default pops up TODO !

* * *
**2008-10-09 18:02**

More polishing on panelreader.rb
But cannot get the line numbers correct.
Also if I display line # on top, then cursor remains there.
If i put the print statemnet at beg of loop, the line number is wonky.
It is correct at end of loop, but then the cursor is stuck on top.

* * *
**2008-10-09 13:34**

panelreader and editor
so i can pop it up and view or edit content or a file

* * *
**2008-10-09 01:05**

## datasource class ##

  Made this more reusable. Lots of silly stuff changed.
  * now it has a constructor.
  * does not do any work other than init.
  * more reusable than earlier.

* * *
**2008-10-08 18:16**

## handling of cursor and selection in subseq queries ##

especially if:
  
  *  fewer queries returned in second query
  *  no queries returned in second query

  Now cursor will always be in row one after a fresh query when you tab.
  Can't tab in if no rows.

* * *
**2008-10-08 17:51**

## get_curr_index bug ##

this was returning one more (base 1) so some users were doing -1
Some methods were getting wrong curr_item like the handle_? methods.

User cannot tab into table if no data.

Issue of wrong header count if no rows also fixed.

* * *

**2008-10-08 14:48**

Moved stuff to Datasource class.
Also checked out more stuff from DSL
Added keys_handled to DLS and tested it.

* * *

**2008-10-07 22:40**

1. based on datatype, aligning fields in table 
2. based on datatype, using = in search query for integer and real and smallint
