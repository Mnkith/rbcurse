TODO RELATED TO MROWS

Number at start is priority.

## TODO ##

 2008-10-10 13:38 
 
 In trying to get key_labels based on forms or apps, i have found that things are not standard.
 QueryApp has a few labels so they are hardcoded in the old format. It does not pick from App
 labels. Thus keys do not get mapped auto.

 TableApp has key hash array. but i don't have a means to immed get the label to print.
 I don't want to force the old hackey way. So its not standard.

 2008-10-08 19:51 
 0 - a lot of datasource will change when we calll it from elsewhere.
     Too much happening in constructor. Constructor should only create object not do stuff.
     Items are hardcoded there, set by DSL, so they cannot be passed.

     Similarly there are methods with hardcoded returns, so they cannot be set as a variable could be.  I might want to pass a where condition to an existing datasource,
    limit the rows, remove some methods. Nothing great but basic reuse. 

 2008-10-04 00:34 
 query.rb is the heavily refactored version of query with a lot moved into app and form classes.
 working as of now.

 Now to go and work on mrows (table with no fields).

 Need to make some SQLite app classes which give mrow view, one page dataentry edit etc.
 Given just table name one can edit.

 2008-10-01 00:47 - should i moved the keyhandlnig off to common or superclass ?

QUERY:
mrows3.rb is the current program for query and mult row
 2008-10-01 14:48 rewriting mrows3.rb as query.rb with Applicaton class


also mrowsnew for just mrows, no query. DONE. ready for DSL.
menu1.rb is current program for menus.

can i put the menu-key handlnig into common or app, and then call it. so we have little code here, then i can giv it a handler to call after its handled its own keys.

NOW to update menu program and form to use proper layout and commons1. - done

we should put various fields and forms vars in some arrays so they can all be cleared at end, rather than having to indiv name them. Could be do the same for form labels and even fields.
Even forms ?

0- i am now changing menuscr - the multirow program to have 3 windows and use mrows3.rb code which is latest. then i make DSL! - DONE. 2008-09-30 13:20 

0 - start making the DSL !!!

0- Make changes to form.skel and menu.skel based on this: windows and 
   key_labels. Usage of commons.rb. Do we ditch commons.rb and start using commons1.rb?

2- / and ? can search for next string back and forth in table. Goto end and beginning

1- Links has a nice way of popping up a dialg, think its a panel. Arrow and tab goes to Cancel and OK.  "s" gives a very nice box with buttons and a list with Add, Del etc.

3- Each askchoice to have Help and ^c by default. - done
   Helptext 2 lines or page link to be given. Helptext can be displayed there in the panel itself for 5 seconds. a page link will be displayed in a browser.
   Subcommandhelp should be 2 lines, main page help should be a link.

2- multi-select - what was this. we have select.

2- if numbers entered. ask if user wishes to go to that row as in pine. allow entry of numbers, catch them show them with question "line to go to: xxx"

2. ability to popup a page with a list of fields to be selected, simple list just like the folders page in pine. If user tabs on a field or dialog, i can pop up choices, select and go back.

2- popup a readonly page with navigation and return. Like see contents of a page, row, file etc.

2 - popup and editable mline field with whatever content, editable and cancel or save or save as etc.

can mrows be embedded in other forms.


## DONE ##
2- Datasource should have get_keys_handled(): DONE
  array of  keycode=>32 , display=>Spc, Text=NextPage, action=>optional method

  def handle_key(int, curritem=0, listselected = [])

so we take keys handled from datasource and add to our key_labels.
if action mentioned, we can call @datasource.send("handle_#{key}", curritem, selected=[])

2- sorting: although DS has to specify what i can sort on. in the same keylabel format
  array of  keycode=>32 , display=>Spc, Text=NextPage, action=>sort
we then call that method, it changes dataarray and we repopulate

Note that this is a subcommand, so the keys will be different. we would call a separate method and pass the keycode, 
When the sort command is called by user that key $ is sent to datasource. it changes the labels and prompts for choice. then it resorts data and refreshes.

1- refresh - populate_data

1- (select fields) Filtering ; puts X adds @curritem to @selected, unselect removes from there.
   Unselect all, etc - DONE, but a row at a time. No asking as yet. Futher ones can be handled by DS only.

>>> 1- move methods out into another class, common stuff so reusable. otherwise too much copying and changing. HOW DO I DO THIS. Move to a module and include it ! DONE !

1- add fields on top for searching, filtering,  - DONE
3- should we experiment with change mrows to just text and not fields. Fields may trouble us
if we are having another form and displaying this.

NO. This was user can pan a table field. also we could make it editable. It is doing fine now.

We need to integrate with sqlite etc very soon, otherwise its only a gimmick. More functinoality can be added later. - DONE

 2008-09-29 23:01 : implemented ask_string which allows for control chars to be trapped and handled by called. takes a char at a time. Only issue to be polished is the backspace. Does pine use a field or what ? Well, they allow arrows, and editing like ^a and ^e ! Is it a customized field ? or a normal field with keys checked first then passed to form handler ?

1- maybe run a command onselected fields,  DONE delete. we need to clear selected items once deleted. put that in populate table. Users needs to take care of whether he needs to clear or not.

2008-09-30 00:40 moved header to header_win.

0 - move header to own window - DONE

 2008-10-01 00:45 : have moved a lot of stuff over to Application superclass and also commons1.rb.
So program code can be simpler for each program. and DSL can be simpler too.
Still a lot of ugly key handing which can be moved to common class or menu handler.

 2008-10-01 11:14 : did some more error checks and exception handling in menu_action.
